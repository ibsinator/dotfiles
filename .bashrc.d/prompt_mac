# Get colors
color_default=$(~/bin/color_picker DEFAULT bash fg)
color_main=$(~/bin/color_picker GREEN bash fg)

if [[ $(cat ~/.color_picker.d/color_mode) == light ]]; then
    color_path=$(~/bin/color_picker DARK_GREY bash fg)
else
    color_path=$(~/bin/color_picker LIGHT_GREY bash fg)
fi

# Git branch info in color
get_git_branch() {
    git_branch=$(git branch 2> /dev/null | awk '/^\*/ {print $2}')

    if [[ -n ${git_branch} ]]; then
    	git_status=$(git status 2> /dev/null)
        to_push=""

    	case ${git_status} in
            *'nothing to commit'*)
	    	color_git=$(~/bin/color_picker GREEN bash fg)
		# Print an exclamation mark when ahead of master
		if grep -q "Your branch is ahead of" <<< "$git_status"; then
		    to_push=" !"
		fi
	    	;;
	    *'Changes to be committed:'*)
	        color_git=$(~/bin/color_picker YELLOW bash fg)
	        ;;
	    *'Changes not staged for commit'*)
	        color_git=$(~/bin/color_picker RED bash fg)
	        ;;
	    *'Untracked files'*)
	        color_git=$(~/bin/color_picker MAGENTA bash fg)
        esac

        git_branch=" (${git_branch}${to_push})"
    fi

    export PS1="${color_main}\A \h${color_default}:${color_path}\w${color_git}${git_branch}${color_default} \$ "
}

PROMPT_COMMAND=get_git_branch
